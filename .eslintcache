[{"/home/vlad/Work/gta_quotes_front/src/index.tsx":"1","/home/vlad/Work/gta_quotes_front/src/reportWebVitals.ts":"2","/home/vlad/Work/gta_quotes_front/src/App.tsx":"3","/home/vlad/Work/gta_quotes_front/src/redux/store.ts":"4","/home/vlad/Work/gta_quotes_front/src/modules/dashboard/dashboard.module.tsx":"5","/home/vlad/Work/gta_quotes_front/src/modules/quote/quote.module.tsx":"6","/home/vlad/Work/gta_quotes_front/src/redux/reducer.ts":"7","/home/vlad/Work/gta_quotes_front/src/redux/quotes/quote-reducer.ts":"8","/home/vlad/Work/gta_quotes_front/src/redux/quotes/quotes.types.ts":"9","/home/vlad/Work/gta_quotes_front/src/redux/quotes/quote-actions.ts":"10","/home/vlad/Work/gta_quotes_front/src/modules/admin/admin.module.tsx":"11","/home/vlad/Work/gta_quotes_front/src/shared/enums/themes.enum.ts":"12","/home/vlad/Work/gta_quotes_front/src/components/shared/menu-button/shared-menu-button.component.tsx":"13","/home/vlad/Work/gta_quotes_front/src/components/shared/quote-card/quote-card.component.tsx":"14","/home/vlad/Work/gta_quotes_front/src/components/shared/quote-author/quote-author.component.tsx":"15","/home/vlad/Work/gta_quotes_front/src/components/character-list/character-list.component.tsx":"16","/home/vlad/Work/gta_quotes_front/src/components/quote-list/quote-list.component.tsx":"17","/home/vlad/Work/gta_quotes_front/src/components/shared/input-field/shared-input.component.tsx":"18","/home/vlad/Work/gta_quotes_front/src/components/shared/shared-text-area/shared-textarea.component.tsx":"19","/home/vlad/Work/gta_quotes_front/src/components/shared/select/shared-select.component.tsx":"20","/home/vlad/Work/gta_quotes_front/src/redux/characters/characters.actions.ts":"21","/home/vlad/Work/gta_quotes_front/src/redux/characters/characters.types.ts":"22","/home/vlad/Work/gta_quotes_front/src/redux/characters/characters.reducer.ts":"23"},{"size":501,"mtime":1608143275103,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":1608062194220,"results":"26","hashOfConfig":"25"},{"size":530,"mtime":1608155009466,"results":"27","hashOfConfig":"25"},{"size":445,"mtime":1609074306726,"results":"28","hashOfConfig":"25"},{"size":1030,"mtime":1609589135504,"results":"29","hashOfConfig":"25"},{"size":596,"mtime":1609682504624,"results":"30","hashOfConfig":"25"},{"size":298,"mtime":1609775429122,"results":"31","hashOfConfig":"25"},{"size":774,"mtime":1610649919220,"results":"32","hashOfConfig":"25"},{"size":627,"mtime":1610647632779,"results":"33","hashOfConfig":"25"},{"size":2500,"mtime":1610648363144,"results":"34","hashOfConfig":"25"},{"size":1714,"mtime":1610651928044,"results":"35","hashOfConfig":"25"},{"size":58,"mtime":1609182930347,"results":"36","hashOfConfig":"25"},{"size":187,"mtime":1609682470184,"results":"37","hashOfConfig":"25"},{"size":1310,"mtime":1609589439676,"results":"38","hashOfConfig":"25"},{"size":622,"mtime":1609680246782,"results":"39","hashOfConfig":"25"},{"size":3450,"mtime":1610651518355,"results":"40","hashOfConfig":"25"},{"size":3195,"mtime":1610653199697,"results":"41","hashOfConfig":"25"},{"size":802,"mtime":1609672630836,"results":"42","hashOfConfig":"25"},{"size":904,"mtime":1609676626413,"results":"43","hashOfConfig":"25"},{"size":1354,"mtime":1610653173617,"results":"44","hashOfConfig":"25"},{"size":2668,"mtime":1610023113939,"results":"45","hashOfConfig":"25"},{"size":673,"mtime":1610651535683,"results":"46","hashOfConfig":"25"},{"size":1772,"mtime":1610651565206,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"roxx5v",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/home/vlad/Work/gta_quotes_front/src/index.tsx",[],["102","103"],"/home/vlad/Work/gta_quotes_front/src/reportWebVitals.ts",[],"/home/vlad/Work/gta_quotes_front/src/App.tsx",["104"],"import React from \"react\";\nimport logo from \"./logo.svg\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport \"./App.scss\";\nimport { DashboardModule } from \"./modules/dashboard/dashboard.module\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route path=\"/\" component={DashboardModule} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","/home/vlad/Work/gta_quotes_front/src/redux/store.ts",[],"/home/vlad/Work/gta_quotes_front/src/modules/dashboard/dashboard.module.tsx",[],"/home/vlad/Work/gta_quotes_front/src/modules/quote/quote.module.tsx",["105"],"import React from \"react\";\nimport { SharedMenuButton } from \"../../components/shared/menu-button/shared-menu-button.component\";\nimport QuoteCard from \"../../components/shared/quote-card/quote-card.component\";\nimport styles from \"./quote.module.scss\";\n\nexport const QuoteModule = () => {\n  return (\n    <div className={styles[\"quote-contaier\"]}>\n      <div className={styles[\"content\"]}>\n        <div className={styles[\"quote-card\"]}>\n          <QuoteCard></QuoteCard>\n        </div>\n\n        {/* <SharedMenuButton text=\"Сохранить\"></SharedMenuButton> */}\n      </div>\n    </div>\n  );\n};\n","/home/vlad/Work/gta_quotes_front/src/redux/reducer.ts",[],"/home/vlad/Work/gta_quotes_front/src/redux/quotes/quote-reducer.ts",[],"/home/vlad/Work/gta_quotes_front/src/redux/quotes/quotes.types.ts",[],"/home/vlad/Work/gta_quotes_front/src/redux/quotes/quote-actions.ts",[],"/home/vlad/Work/gta_quotes_front/src/modules/admin/admin.module.tsx",["106","107","108"],"import React from \"react\";\nimport styles from \"./admin.module.scss\";\nimport { Switch, useRouteMatch, Link, Route } from \"react-router-dom\";\nimport CharacterListComponent from \"../../components/character-list/character-list.component\";\nimport QuoteListComponent from \"../../components/quote-list/quote-list.component\";\n\nexport const AdminModule = () => {\n  let { path } = useRouteMatch();\n  console.log(\"path: \", path);\n\n  const nameChanged = (e: string) => {\n    console.log(\"parent name e: \", e);\n  };\n\n  const picChanged = (e: string) => {\n    console.log(\"parent pic e: \", e);\n  };\n\n  const authorChanged = (e: string) => {\n    console.log(\"authorChanged: \", e);\n  };\n  return (\n    <div className={styles[\"admin-contaier\"]}>\n      <div className={styles[\"navigaiton\"]}>\n        <div>\n          <Link to={`${path}/quotelist`}>Цитаты</Link>\n        </div>\n        <div>\n          <Link to={`${path}/characterlist`}>Персонажи</Link>\n        </div>\n      </div>\n      <div>\n        <Switch>\n          <Route\n            path={`${path}/quotelist`}\n            component={QuoteListComponent}\n          ></Route>\n          <Route\n            path={`${path}/characterlist`}\n            component={CharacterListComponent}\n          ></Route>\n        </Switch>\n      </div>\n      {/* <div>\n        Name:\n        <SharedInput theme={Theme.dark} parentCb={nameChanged}></SharedInput>\n      </div>\n      <div>\n        Pic:\n        <SharedInput theme={Theme.dark} parentCb={picChanged}></SharedInput>\n      </div>\n      <div>\n        <SharedSelect\n          theme={Theme.dark}\n          parentCb={authorChanged}\n          options={[1, 2, 3, 4, 5]}\n        ></SharedSelect>\n      </div> */}\n    </div>\n  );\n};\n","/home/vlad/Work/gta_quotes_front/src/shared/enums/themes.enum.ts",[],"/home/vlad/Work/gta_quotes_front/src/components/shared/menu-button/shared-menu-button.component.tsx",[],"/home/vlad/Work/gta_quotes_front/src/components/shared/quote-card/quote-card.component.tsx",["109","110"],"import styles from \"./quote-card.module.scss\";\nimport pic from \"../../../assets/images/bg3.jpg\";\nimport React from \"react\";\nimport { QuoteAuthorComponent } from \"../quote-author/quote-author.component\";\nimport { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchQuote } from \"../../../redux/quotes/quote-actions\";\nimport { QuoteStateInterface } from \"../../../redux/quotes/quotes.types\";\n\nexport interface QuoteCardProps {\n  quote: QuoteStateInterface;\n  fetchQuote: any;\n}\n\nconst QuoteCard = ({ quote, fetchQuote }: QuoteCardProps) => {\n  useEffect(() => {\n    fetchQuote();\n  }, []);\n\n  return quote.isLoading ? (\n    <h3>Loading</h3>\n  ) : (\n    <div className={styles[\"quote-card-container\"]}>\n      <img className={styles[\"quote-image2\"]} src={pic} />\n      <div className={styles[\"quote-text\"]}>{quote.quote?.text}</div>\n      <div className={styles[\"quote-author\"]}>\n        <QuoteAuthorComponent\n          author={quote.quote?.author}\n        ></QuoteAuthorComponent>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    quote: state.quote,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    fetchQuote: () => dispatch(fetchQuote()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuoteCard);\n","/home/vlad/Work/gta_quotes_front/src/components/shared/quote-author/quote-author.component.tsx",["111"],"import styles from \"./quote-author.module.scss\";\nimport pic from \"../../../assets/images/author__big-smoke.jpg\";\nimport { CharacterInterface } from \"../../../redux/characters/characters.types\";\n\nexport interface QuoteAuthorProps {\n  author: CharacterInterface;\n}\n\nexport const QuoteAuthorComponent = (props: QuoteAuthorProps) => {\n  return (\n    <div className={styles[\"quote-author-container\"]}>\n      <div className={styles[\"quote-author-container__name\"]}>\n        {props.author?.name}\n      </div>\n      <div className={styles[\"quote-author-container__pic\"]}>\n        <img src={pic} />\n      </div>\n    </div>\n  );\n};\n","/home/vlad/Work/gta_quotes_front/src/components/character-list/character-list.component.tsx",["112","113","114"],"import React, { useEffect, useState } from \"react\";\nimport styles from \"./character-list.module.scss\";\nimport { connect, useSelector } from \"react-redux\";\nimport {\n  fetchCharacters,\n  removeCharacter,\n  uploadCharacter,\n} from \"../../redux/characters/characters.actions\";\nimport { CharacterInterface } from \"../../redux/characters/characters.types\";\nimport { SharedInput } from \"../shared/input-field/shared-input.component\";\nimport { SharedMenuButton } from \"../shared/menu-button/shared-menu-button.component\";\nimport ClearRoundedIcon from \"@material-ui/icons/ClearRounded\";\nimport { initialCharacterListStateInterface } from \"../../redux/characters/characters.reducer\";\n\ninterface CharacterListProps {\n  uploadCharacter: any;\n  fetchCharacters: any;\n  removeCharacter: any;\n\n  characterListState: initialCharacterListStateInterface;\n}\n\nconst CharacterListComponent = ({\n  uploadCharacter,\n  fetchCharacters,\n  removeCharacter,\n  characterListState,\n}: CharacterListProps) => {\n  const [image, setFile] = useState<any>();\n  const [name, setName] = useState<string>(\"\");\n\n  useEffect(() => {\n    fetchCharacters();\n  }, []);\n\n  const handleImageChange = (e: any) => {\n    let reader = new FileReader();\n    let file = e.target.files[0];\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      setFile(reader.result);\n    };\n  };\n\n  const nameChanged = (text: string) => {\n    setName(text);\n  };\n\n  const uploadClicked = () => {\n    if (name && image) {\n      uploadCharacter({ name, image: window.btoa(image) });\n    } else {\n      console.log(\"Fill all the fields\");\n    }\n  };\n\n  return (\n    <div>\n      <SharedInput parentCb={nameChanged}></SharedInput>\n      <input\n        className=\"fileInput\"\n        type=\"file\"\n        onChange={(e) => handleImageChange(e)}\n      />\n\n      <img src={image} alt=\"\" />\n      <SharedMenuButton\n        text=\"Добавить\"\n        parentCb={uploadClicked}\n      ></SharedMenuButton>\n      <div id=\"list\">\n        {characterListState.isLoading ? (\n          <h3>Loading</h3>\n        ) : (\n          characterListState.characterList.map(\n            (character: CharacterInterface, idx) => {\n              return (\n                <div\n                  className={styles[\"character-container\"]}\n                  key={character.id}\n                >\n                  <div>{character.name}</div>\n                  <div className={styles[\"image-container\"]}>\n                    <img\n                      className={styles[\"character-image\"]}\n                      src={window.atob(character?.image)}\n                    />\n                  </div>\n                  <div\n                    onClick={() => removeCharacter(character.id)}\n                    className={styles[\"character-remove\"]}\n                  >\n                    <ClearRoundedIcon></ClearRoundedIcon>\n                  </div>\n                </div>\n              );\n            }\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    characterListState: state.characterList,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    uploadCharacter: (body: CharacterInterface) =>\n      dispatch(uploadCharacter(body)),\n    fetchCharacters: () => dispatch(fetchCharacters()),\n    removeCharacter: (id: number) => dispatch(removeCharacter(id)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CharacterListComponent);\n","/home/vlad/Work/gta_quotes_front/src/components/quote-list/quote-list.component.tsx",["115","116","117","118","119","120","121","122"],"/home/vlad/Work/gta_quotes_front/src/components/shared/input-field/shared-input.component.tsx",[],"/home/vlad/Work/gta_quotes_front/src/components/shared/shared-text-area/shared-textarea.component.tsx",["123"],"import { useState } from \"react\";\nimport { Theme } from \"../../../shared/enums/themes.enum\";\nimport styles from \"./shared-textarea.module.scss\";\n\ninterface SharedTextareaProps {\n  theme?: Theme | undefined;\n  value?: string;\n  parentCb: any;\n}\n\nexport const SharedTextarea = (props: SharedTextareaProps) => {\n  const [text, setText] = useState(\"\");\n\n  const getComputedStyle = (theme: Theme | undefined) => {\n    console.log(\"!theme: \", theme === Theme.dark || !theme ? \"dark\" : \"light\");\n    return theme === Theme.dark || !theme ? \"dark\" : \"light\";\n  };\n\n  const changeHandler = (e: any) => {\n    setText(e.target.value);\n    props.parentCb(e.target.value);\n  };\n  return (\n    <div className={styles[\"texarea-container\"]}>\n      <textarea\n        className={`${styles[getComputedStyle(props.theme)]}`}\n        value={props.value}\n        onChange={(e) => changeHandler(e)}\n      />\n    </div>\n  );\n};\n","/home/vlad/Work/gta_quotes_front/src/components/shared/select/shared-select.component.tsx",["124"],"/home/vlad/Work/gta_quotes_front/src/redux/characters/characters.actions.ts",[],"/home/vlad/Work/gta_quotes_front/src/redux/characters/characters.types.ts",[],"/home/vlad/Work/gta_quotes_front/src/redux/characters/characters.reducer.ts",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":2,"column":8,"nodeType":"131","messageId":"132","endLine":2,"endColumn":12},{"ruleId":"129","severity":1,"message":"133","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":26},{"ruleId":"129","severity":1,"message":"134","line":11,"column":9,"nodeType":"131","messageId":"132","endLine":11,"endColumn":20},{"ruleId":"129","severity":1,"message":"135","line":15,"column":9,"nodeType":"131","messageId":"132","endLine":15,"endColumn":19},{"ruleId":"129","severity":1,"message":"136","line":19,"column":9,"nodeType":"131","messageId":"132","endLine":19,"endColumn":22},{"ruleId":"137","severity":1,"message":"138","line":18,"column":6,"nodeType":"139","endLine":18,"endColumn":8,"suggestions":"140"},{"ruleId":"141","severity":1,"message":"142","line":24,"column":7,"nodeType":"143","endLine":24,"endColumn":59},{"ruleId":"141","severity":1,"message":"142","line":16,"column":9,"nodeType":"143","endLine":16,"endColumn":26},{"ruleId":"129","severity":1,"message":"144","line":3,"column":19,"nodeType":"131","messageId":"132","endLine":3,"endColumn":30},{"ruleId":"137","severity":1,"message":"145","line":34,"column":6,"nodeType":"139","endLine":34,"endColumn":8,"suggestions":"146"},{"ruleId":"141","severity":1,"message":"142","line":85,"column":21,"nodeType":"143","endLine":88,"endColumn":23},{"ruleId":"129","severity":1,"message":"147","line":5,"column":10,"nodeType":"131","messageId":"132","endLine":5,"endColumn":28},{"ruleId":"129","severity":1,"message":"148","line":7,"column":3,"nodeType":"131","messageId":"132","endLine":7,"endColumn":13},{"ruleId":"129","severity":1,"message":"149","line":8,"column":3,"nodeType":"131","messageId":"132","endLine":8,"endColumn":14},{"ruleId":"129","severity":1,"message":"150","line":9,"column":3,"nodeType":"131","messageId":"132","endLine":9,"endColumn":14},{"ruleId":"129","severity":1,"message":"151","line":13,"column":3,"nodeType":"131","messageId":"132","endLine":13,"endColumn":17},{"ruleId":"129","severity":1,"message":"152","line":14,"column":3,"nodeType":"131","messageId":"132","endLine":14,"endColumn":22},{"ruleId":"129","severity":1,"message":"153","line":16,"column":10,"nodeType":"131","messageId":"132","endLine":16,"endColumn":21},{"ruleId":"137","severity":1,"message":"145","line":40,"column":6,"nodeType":"139","endLine":40,"endColumn":8,"suggestions":"154"},{"ruleId":"129","severity":1,"message":"155","line":12,"column":10,"nodeType":"131","messageId":"132","endLine":12,"endColumn":14},{"ruleId":"137","severity":1,"message":"156","line":13,"column":50,"nodeType":"139","endLine":13,"endColumn":52,"suggestions":"157"},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'SharedMenuButton' is defined but never used.","'nameChanged' is assigned a value but never used.","'picChanged' is assigned a value but never used.","'authorChanged' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchQuote'. Either include it or remove the dependency array. If 'fetchQuote' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["160"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useSelector' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchCharacters'. Either include it or remove the dependency array. If 'fetchCharacters' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["161"],"'CharacterInterface' is defined but never used.","'fetchQuote' is defined but never used.","'removeQuote' is defined but never used.","'uploadQuote' is defined but never used.","'QuoteInterface' is defined but never used.","'QuoteStateInterface' is defined but never used.","'SharedInput' is defined but never used.",["162"],"'text' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["163"],"no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"166","fix":"168"},{"desc":"169","fix":"170"},"Update the dependencies array to be: [fetchQuote]",{"range":"171","text":"172"},"Update the dependencies array to be: [fetchCharacters]",{"range":"173","text":"174"},{"range":"175","text":"174"},"Update the dependencies array to be: [props]",{"range":"176","text":"177"},[610,612],"[fetchQuote]",[1122,1124],"[fetchCharacters]",[1277,1279],[387,389],"[props]"]
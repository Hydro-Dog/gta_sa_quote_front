[{"/home/vlad/Work/gta_quotes_front/src/index.tsx":"1","/home/vlad/Work/gta_quotes_front/src/reportWebVitals.ts":"2","/home/vlad/Work/gta_quotes_front/src/App.tsx":"3","/home/vlad/Work/gta_quotes_front/src/redux/store.ts":"4","/home/vlad/Work/gta_quotes_front/src/modules/dashboard/dashboard.module.tsx":"5","/home/vlad/Work/gta_quotes_front/src/modules/quote/quote.module.tsx":"6","/home/vlad/Work/gta_quotes_front/src/redux/reducer.ts":"7","/home/vlad/Work/gta_quotes_front/src/redux/quotes/quote-reducer.ts":"8","/home/vlad/Work/gta_quotes_front/src/redux/quotes/quotes.types.ts":"9","/home/vlad/Work/gta_quotes_front/src/redux/quotes/quote-actions.ts":"10","/home/vlad/Work/gta_quotes_front/src/modules/admin/admin.module.tsx":"11","/home/vlad/Work/gta_quotes_front/src/shared/enums/themes.enum.ts":"12","/home/vlad/Work/gta_quotes_front/src/components/shared/menu-button/shared-menu-button.component.tsx":"13","/home/vlad/Work/gta_quotes_front/src/components/shared/quote-card/quote-card.component.tsx":"14","/home/vlad/Work/gta_quotes_front/src/components/shared/quote-author/quote-author.component.tsx":"15","/home/vlad/Work/gta_quotes_front/src/components/character-list/character-list.component.tsx":"16","/home/vlad/Work/gta_quotes_front/src/components/quote-list/quote-list.component.tsx":"17","/home/vlad/Work/gta_quotes_front/src/components/shared/input-field/shared-input.component.tsx":"18","/home/vlad/Work/gta_quotes_front/src/components/shared/shared-text-area/shared-textarea.component.tsx":"19","/home/vlad/Work/gta_quotes_front/src/components/shared/select/shared-select.component.tsx":"20","/home/vlad/Work/gta_quotes_front/src/redux/characters/characters.actions.ts":"21","/home/vlad/Work/gta_quotes_front/src/redux/characters/characters.types.ts":"22","/home/vlad/Work/gta_quotes_front/src/redux/characters/characters.reducer.ts":"23"},{"size":501,"mtime":1608143275103,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":1608062194220,"results":"26","hashOfConfig":"25"},{"size":530,"mtime":1608155009466,"results":"27","hashOfConfig":"25"},{"size":445,"mtime":1609074306726,"results":"28","hashOfConfig":"25"},{"size":1030,"mtime":1609589135504,"results":"29","hashOfConfig":"25"},{"size":596,"mtime":1609682504624,"results":"30","hashOfConfig":"25"},{"size":298,"mtime":1609775429122,"results":"31","hashOfConfig":"25"},{"size":774,"mtime":1610649919220,"results":"32","hashOfConfig":"25"},{"size":629,"mtime":1610898452112,"results":"33","hashOfConfig":"25"},{"size":2552,"mtime":1610899096945,"results":"34","hashOfConfig":"25"},{"size":1714,"mtime":1610651928044,"results":"35","hashOfConfig":"25"},{"size":58,"mtime":1609182930347,"results":"36","hashOfConfig":"25"},{"size":187,"mtime":1609682470184,"results":"37","hashOfConfig":"25"},{"size":1310,"mtime":1610905333887,"results":"38","hashOfConfig":"25"},{"size":735,"mtime":1610904541980,"results":"39","hashOfConfig":"25"},{"size":3450,"mtime":1610651518355,"results":"40","hashOfConfig":"25"},{"size":4032,"mtime":1610899010405,"results":"41","hashOfConfig":"25"},{"size":802,"mtime":1609672630836,"results":"42","hashOfConfig":"25"},{"size":904,"mtime":1609676626413,"results":"43","hashOfConfig":"25"},{"size":1354,"mtime":1610653173617,"results":"44","hashOfConfig":"25"},{"size":2668,"mtime":1610023113939,"results":"45","hashOfConfig":"25"},{"size":673,"mtime":1610651535683,"results":"46","hashOfConfig":"25"},{"size":1772,"mtime":1610651565206,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"roxx5v",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/home/vlad/Work/gta_quotes_front/src/index.tsx",[],["102","103"],"/home/vlad/Work/gta_quotes_front/src/reportWebVitals.ts",[],"/home/vlad/Work/gta_quotes_front/src/App.tsx",["104"],"import React from \"react\";\nimport logo from \"./logo.svg\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport \"./App.scss\";\nimport { DashboardModule } from \"./modules/dashboard/dashboard.module\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route path=\"/\" component={DashboardModule} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","/home/vlad/Work/gta_quotes_front/src/redux/store.ts",[],"/home/vlad/Work/gta_quotes_front/src/modules/dashboard/dashboard.module.tsx",[],"/home/vlad/Work/gta_quotes_front/src/modules/quote/quote.module.tsx",["105"],"import React from \"react\";\nimport { SharedMenuButton } from \"../../components/shared/menu-button/shared-menu-button.component\";\nimport QuoteCard from \"../../components/shared/quote-card/quote-card.component\";\nimport styles from \"./quote.module.scss\";\n\nexport const QuoteModule = () => {\n  return (\n    <div className={styles[\"quote-contaier\"]}>\n      <div className={styles[\"content\"]}>\n        <div className={styles[\"quote-card\"]}>\n          <QuoteCard></QuoteCard>\n        </div>\n\n        {/* <SharedMenuButton text=\"Сохранить\"></SharedMenuButton> */}\n      </div>\n    </div>\n  );\n};\n","/home/vlad/Work/gta_quotes_front/src/redux/reducer.ts",[],"/home/vlad/Work/gta_quotes_front/src/redux/quotes/quote-reducer.ts",[],"/home/vlad/Work/gta_quotes_front/src/redux/quotes/quotes.types.ts",[],"/home/vlad/Work/gta_quotes_front/src/redux/quotes/quote-actions.ts",[],"/home/vlad/Work/gta_quotes_front/src/modules/admin/admin.module.tsx",["106","107","108"],"import React from \"react\";\nimport styles from \"./admin.module.scss\";\nimport { Switch, useRouteMatch, Link, Route } from \"react-router-dom\";\nimport CharacterListComponent from \"../../components/character-list/character-list.component\";\nimport QuoteListComponent from \"../../components/quote-list/quote-list.component\";\n\nexport const AdminModule = () => {\n  let { path } = useRouteMatch();\n  console.log(\"path: \", path);\n\n  const nameChanged = (e: string) => {\n    console.log(\"parent name e: \", e);\n  };\n\n  const picChanged = (e: string) => {\n    console.log(\"parent pic e: \", e);\n  };\n\n  const authorChanged = (e: string) => {\n    console.log(\"authorChanged: \", e);\n  };\n  return (\n    <div className={styles[\"admin-contaier\"]}>\n      <div className={styles[\"navigaiton\"]}>\n        <div>\n          <Link to={`${path}/quotelist`}>Цитаты</Link>\n        </div>\n        <div>\n          <Link to={`${path}/characterlist`}>Персонажи</Link>\n        </div>\n      </div>\n      <div>\n        <Switch>\n          <Route\n            path={`${path}/quotelist`}\n            component={QuoteListComponent}\n          ></Route>\n          <Route\n            path={`${path}/characterlist`}\n            component={CharacterListComponent}\n          ></Route>\n        </Switch>\n      </div>\n      {/* <div>\n        Name:\n        <SharedInput theme={Theme.dark} parentCb={nameChanged}></SharedInput>\n      </div>\n      <div>\n        Pic:\n        <SharedInput theme={Theme.dark} parentCb={picChanged}></SharedInput>\n      </div>\n      <div>\n        <SharedSelect\n          theme={Theme.dark}\n          parentCb={authorChanged}\n          options={[1, 2, 3, 4, 5]}\n        ></SharedSelect>\n      </div> */}\n    </div>\n  );\n};\n","/home/vlad/Work/gta_quotes_front/src/shared/enums/themes.enum.ts",[],"/home/vlad/Work/gta_quotes_front/src/components/shared/menu-button/shared-menu-button.component.tsx",[],"/home/vlad/Work/gta_quotes_front/src/components/shared/quote-card/quote-card.component.tsx",["109","110"],"/home/vlad/Work/gta_quotes_front/src/components/shared/quote-author/quote-author.component.tsx",["111","112"],"/home/vlad/Work/gta_quotes_front/src/components/character-list/character-list.component.tsx",["113","114","115"],"import React, { useEffect, useState } from \"react\";\nimport styles from \"./character-list.module.scss\";\nimport { connect, useSelector } from \"react-redux\";\nimport {\n  fetchCharacters,\n  removeCharacter,\n  uploadCharacter,\n} from \"../../redux/characters/characters.actions\";\nimport { CharacterInterface } from \"../../redux/characters/characters.types\";\nimport { SharedInput } from \"../shared/input-field/shared-input.component\";\nimport { SharedMenuButton } from \"../shared/menu-button/shared-menu-button.component\";\nimport ClearRoundedIcon from \"@material-ui/icons/ClearRounded\";\nimport { initialCharacterListStateInterface } from \"../../redux/characters/characters.reducer\";\n\ninterface CharacterListProps {\n  uploadCharacter: any;\n  fetchCharacters: any;\n  removeCharacter: any;\n\n  characterListState: initialCharacterListStateInterface;\n}\n\nconst CharacterListComponent = ({\n  uploadCharacter,\n  fetchCharacters,\n  removeCharacter,\n  characterListState,\n}: CharacterListProps) => {\n  const [image, setFile] = useState<any>();\n  const [name, setName] = useState<string>(\"\");\n\n  useEffect(() => {\n    fetchCharacters();\n  }, []);\n\n  const handleImageChange = (e: any) => {\n    let reader = new FileReader();\n    let file = e.target.files[0];\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      setFile(reader.result);\n    };\n  };\n\n  const nameChanged = (text: string) => {\n    setName(text);\n  };\n\n  const uploadClicked = () => {\n    if (name && image) {\n      uploadCharacter({ name, image: window.btoa(image) });\n    } else {\n      console.log(\"Fill all the fields\");\n    }\n  };\n\n  return (\n    <div>\n      <SharedInput parentCb={nameChanged}></SharedInput>\n      <input\n        className=\"fileInput\"\n        type=\"file\"\n        onChange={(e) => handleImageChange(e)}\n      />\n\n      <img src={image} alt=\"\" />\n      <SharedMenuButton\n        text=\"Добавить\"\n        parentCb={uploadClicked}\n      ></SharedMenuButton>\n      <div id=\"list\">\n        {characterListState.isLoading ? (\n          <h3>Loading</h3>\n        ) : (\n          characterListState.characterList.map(\n            (character: CharacterInterface, idx) => {\n              return (\n                <div\n                  className={styles[\"character-container\"]}\n                  key={character.id}\n                >\n                  <div>{character.name}</div>\n                  <div className={styles[\"image-container\"]}>\n                    <img\n                      className={styles[\"character-image\"]}\n                      src={window.atob(character?.image)}\n                    />\n                  </div>\n                  <div\n                    onClick={() => removeCharacter(character.id)}\n                    className={styles[\"character-remove\"]}\n                  >\n                    <ClearRoundedIcon></ClearRoundedIcon>\n                  </div>\n                </div>\n              );\n            }\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    characterListState: state.characterList,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    uploadCharacter: (body: CharacterInterface) =>\n      dispatch(uploadCharacter(body)),\n    fetchCharacters: () => dispatch(fetchCharacters()),\n    removeCharacter: (id: number) => dispatch(removeCharacter(id)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CharacterListComponent);\n","/home/vlad/Work/gta_quotes_front/src/components/quote-list/quote-list.component.tsx",["116","117","118","119","120"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchCharacters } from \"../../redux/characters/characters.actions\";\nimport { initialCharacterListStateInterface } from \"../../redux/characters/characters.reducer\";\nimport { CharacterInterface } from \"../../redux/characters/characters.types\";\nimport {\n  fetchQuote,\n  removeQuote,\n  uploadQuote,\n} from \"../../redux/quotes/quote-actions\";\nimport { initialQuoteStateInterface } from \"../../redux/quotes/quote-reducer\";\nimport {\n  QuoteInterface,\n  QuoteStateInterface,\n} from \"../../redux/quotes/quotes.types\";\nimport { SharedInput } from \"../shared/input-field/shared-input.component\";\nimport { SharedMenuButton } from \"../shared/menu-button/shared-menu-button.component\";\nimport { SharedSelect } from \"../shared/select/shared-select.component\";\nimport { SharedTextarea } from \"../shared/shared-text-area/shared-textarea.component\";\n\ninterface QuoteListProps {\n  fetchQuote: any;\n  uploadQuote: any;\n  removeQuote: any;\n  fetchCharacters: any;\n\n  initialQuoteState: initialQuoteStateInterface;\n  initialCharcterListState: initialCharacterListStateInterface;\n}\n\nconst QuoteListComponent = ({\n  fetchQuote,\n  uploadQuote,\n  removeQuote,\n  fetchCharacters,\n  initialQuoteState,\n  initialCharcterListState,\n}: QuoteListProps) => {\n  const [quote, setQuote] = useState<string>();\n  const [character, setCharacter] = useState<{ value: string; id: number }>(\n    initialCharcterListState.characterList[0]\n  );\n\n  useEffect(() => {\n    fetchCharacters();\n  }, []);\n\n  const quoteTextChanged = (text: string) => {\n    setQuote(text);\n    console.log(\"tex: \", text);\n  };\n\n  const characterSelected = (character: { value: string; id: number }) => {\n    setCharacter(character);\n    console.log(\"character: \", character);\n  };\n\n  const uploadClicked = () => {\n    console.log(\"character: \", character);\n    console.log(\"quote: \", quote);\n    if (quote && character) {\n      uploadQuote({ text: quote, authorId: character.id });\n    } else {\n      console.log(\"Fill all the fields\");\n    }\n  };\n\n  return (\n    <div>\n      <div id=\"list\">\n        {/* {initialCharcterListState?.characterList.map(\n          (character: CharacterInterface, idx) => {\n            return (\n              <div key={character.id}>\n                <div>{character.name}</div>\n                <div>\n                  <img src={window.atob(character?.image)} />\n                </div>\n                <div></div>\n              </div>\n            );\n          }\n        )} */}\n      </div>\n      <SharedTextarea parentCb={quoteTextChanged}></SharedTextarea>\n      {initialCharcterListState.characterList.length ? (\n        <div>\n          <SharedSelect\n            options={initialCharcterListState.characterList.map(\n              (character) => ({\n                value: character.name,\n                id: character.id,\n              })\n            )}\n            parentCb={characterSelected}\n          ></SharedSelect>\n          <SharedMenuButton\n            text=\"Добавить\"\n            parentCb={uploadClicked}\n          ></SharedMenuButton>\n        </div>\n      ) : (\n        <div></div>\n      )}\n      <div id=\"quote-list\"></div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    initialQuoteState: state.initialQuoteState,\n    initialCharcterListState: state.characterList,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    fetchCharacters: () => dispatch(fetchCharacters()),\n    uploadQuote: (quoteBody: QuoteInterface) =>\n      dispatch(uploadQuote(quoteBody)),\n  };\n\n  return {\n    fetchQuote: () => dispatch(fetchQuote()),\n    removeQuote: (id: number) => dispatch(removeQuote(id)),\n    fetchCharacters: () => dispatch(fetchCharacters()),\n  };\n};\n\n//ВАЖНО: если используем в компоненте redux, то экспортируем не сам компонента, а вот этот коннект\nexport default connect(mapStateToProps, mapDispatchToProps)(QuoteListComponent);\n","/home/vlad/Work/gta_quotes_front/src/components/shared/input-field/shared-input.component.tsx",[],"/home/vlad/Work/gta_quotes_front/src/components/shared/shared-text-area/shared-textarea.component.tsx",["121"],"import { useState } from \"react\";\nimport { Theme } from \"../../../shared/enums/themes.enum\";\nimport styles from \"./shared-textarea.module.scss\";\n\ninterface SharedTextareaProps {\n  theme?: Theme | undefined;\n  value?: string;\n  parentCb: any;\n}\n\nexport const SharedTextarea = (props: SharedTextareaProps) => {\n  const [text, setText] = useState(\"\");\n\n  const getComputedStyle = (theme: Theme | undefined) => {\n    console.log(\"!theme: \", theme === Theme.dark || !theme ? \"dark\" : \"light\");\n    return theme === Theme.dark || !theme ? \"dark\" : \"light\";\n  };\n\n  const changeHandler = (e: any) => {\n    setText(e.target.value);\n    props.parentCb(e.target.value);\n  };\n  return (\n    <div className={styles[\"texarea-container\"]}>\n      <textarea\n        className={`${styles[getComputedStyle(props.theme)]}`}\n        value={props.value}\n        onChange={(e) => changeHandler(e)}\n      />\n    </div>\n  );\n};\n","/home/vlad/Work/gta_quotes_front/src/components/shared/select/shared-select.component.tsx",["122"],"import { useEffect, useState } from \"react\";\nimport { Theme } from \"../../../shared/enums/themes.enum\";\nimport styles from \"./shared-select.module.scss\";\n\ninterface SharedSelectProps {\n  theme?: Theme;\n  value?: string;\n  options: { value: any; id: any }[];\n  parentCb: any;\n}\n\nexport const SharedSelect = (props: SharedSelectProps) => {\n  useEffect(() => console.log(\"props: \", props), []);\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOtion, setSelectedOption] = useState(props.options[0]);\n\n  const optionSelected = (option: any) => {\n    setSelectedOption(option);\n    setIsOpen(false);\n    props.parentCb(option);\n  };\n  const getComputedStyle = (theme: Theme | undefined) => {\n    return theme === Theme.dark || !theme ? \"dark\" : \"light\";\n  };\n\n  const dropdownToggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <div className={`${styles[getComputedStyle(props.theme)]}`}>\n      <div onClick={dropdownToggle}>{selectedOtion?.value}</div>\n      <div>\n        {isOpen ? (\n          props.options.map((option: any) => (\n            <div\n              className={styles[\"option\"]}\n              onClick={(e) => optionSelected(option)}\n              key={option.id}\n            >\n              {option.value}\n            </div>\n          ))\n        ) : (\n          <span></span>\n        )}\n      </div>\n    </div>\n  );\n};\n","/home/vlad/Work/gta_quotes_front/src/redux/characters/characters.actions.ts",[],"/home/vlad/Work/gta_quotes_front/src/redux/characters/characters.types.ts",[],"/home/vlad/Work/gta_quotes_front/src/redux/characters/characters.reducer.ts",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":12},{"ruleId":"127","severity":1,"message":"131","line":2,"column":10,"nodeType":"129","messageId":"130","endLine":2,"endColumn":26},{"ruleId":"127","severity":1,"message":"132","line":11,"column":9,"nodeType":"129","messageId":"130","endLine":11,"endColumn":20},{"ruleId":"127","severity":1,"message":"133","line":15,"column":9,"nodeType":"129","messageId":"130","endLine":15,"endColumn":19},{"ruleId":"127","severity":1,"message":"134","line":19,"column":9,"nodeType":"129","messageId":"130","endLine":19,"endColumn":22},{"ruleId":"135","severity":1,"message":"136","line":18,"column":6,"nodeType":"137","endLine":18,"endColumn":8,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":24,"column":7,"nodeType":"141","endLine":24,"endColumn":59},{"ruleId":"127","severity":1,"message":"142","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":11},{"ruleId":"139","severity":1,"message":"140","line":16,"column":9,"nodeType":"141","endLine":19,"endColumn":11},{"ruleId":"127","severity":1,"message":"143","line":3,"column":19,"nodeType":"129","messageId":"130","endLine":3,"endColumn":30},{"ruleId":"135","severity":1,"message":"144","line":34,"column":6,"nodeType":"137","endLine":34,"endColumn":8,"suggestions":"145"},{"ruleId":"139","severity":1,"message":"140","line":85,"column":21,"nodeType":"141","endLine":88,"endColumn":23},{"ruleId":"127","severity":1,"message":"146","line":5,"column":10,"nodeType":"129","messageId":"130","endLine":5,"endColumn":28},{"ruleId":"127","severity":1,"message":"147","line":14,"column":3,"nodeType":"129","messageId":"130","endLine":14,"endColumn":22},{"ruleId":"127","severity":1,"message":"148","line":16,"column":10,"nodeType":"129","messageId":"130","endLine":16,"endColumn":21},{"ruleId":"135","severity":1,"message":"144","line":46,"column":6,"nodeType":"137","endLine":46,"endColumn":8,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":124,"column":3,"nodeType":"152","messageId":"153","endLine":128,"endColumn":5},{"ruleId":"127","severity":1,"message":"154","line":12,"column":10,"nodeType":"129","messageId":"130","endLine":12,"endColumn":14},{"ruleId":"135","severity":1,"message":"155","line":13,"column":50,"nodeType":"137","endLine":13,"endColumn":52,"suggestions":"156"},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'SharedMenuButton' is defined but never used.","'nameChanged' is assigned a value but never used.","'picChanged' is assigned a value but never used.","'authorChanged' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchQuote'. Either include it or remove the dependency array. If 'fetchQuote' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["159"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'pic' is defined but never used.","'useSelector' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchCharacters'. Either include it or remove the dependency array. If 'fetchCharacters' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["160"],"'CharacterInterface' is defined but never used.","'QuoteStateInterface' is defined but never used.","'SharedInput' is defined but never used.",["161"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'text' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["162"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"165","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [fetchQuote]",{"range":"170","text":"171"},"Update the dependencies array to be: [fetchCharacters]",{"range":"172","text":"173"},{"range":"174","text":"173"},"Update the dependencies array to be: [props]",{"range":"175","text":"176"},[610,612],"[fetchQuote]",[1122,1124],"[fetchCharacters]",[1551,1553],[387,389],"[props]"]